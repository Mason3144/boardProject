spring:
  servlet:
    multipart:
      maxFileSize: 10MB
      maxRequestSize: 20MB
  h2:
    console:
      enabled: true
      path: /h2
  datasource:
    url: jdbc:h2:mem:test
  jpa:
    hibernate:
      ddl-auto: create  # (1) 스키마 자동 생성
    show-sql: true      # (2) SQL 쿼리 출력
    properties:
      hibernate:
        format_sql: true  # (3) SQL pretty print
  sql:
    init:
      data-locations: classpath*:db/h2/data.sql
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${OAUTH2_GOOGLE_CLIENT_ID} # 민감한 정보는 시스템 환경 변수에서 로드한다.
            clientSecret: ${OAUTH2_GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
logging:
  level:
    org:
      springframework:
        orm:
          jpa: DEBUG
server:
  servlet:
    encoding:
      force-response: true
jwt:
  key:
    secret: ${JWT_SECRET_KEY}
  access-token-expiration-minutes: 30
  refresh-token-expiration-minutes: 420
cloud:
  s3:
    access-id: ${S3_BOARD_PROJECT_ACCESS_KEY}
    secret-key: ${S3_BOARD_PROJECT_SECRET_KEY}
mail:
  address:
    admin: admin@admin.com
  smtp:
    host: smtp.gmail.com
    port: 587
    username: ${GMAIL_SMTP_USERNAME}  # 민감한 정보는 시스템 환경 변수로..
    password: ${GMAIL_SMTP_PASSWORD}  # 민감한 정보는 시스템 환경 변수로..
    auth: true
    starttls:
      enable: true
  subject:
    member:
      registration: Thank you for joining!
  template:
    name:
      member:
        join: email-registration-member
URL: "http://localhost:8080"